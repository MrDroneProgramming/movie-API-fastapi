# ar-back-similarity
Microservice for the Similarity application in Augmented Recruiting.

## Principal stack
- **Python 3.7+**
- **Fastapi 0.61.1**
## Repo Structure
```
ar-back-similarity
│   README.md
│   docker-compose.yml
│   docker-compose-dev.yml
│   Makefile
│   Dockerfile
│   Dockerfile.dev
│   requirements.txt
└──/app               -> Similarity microservice
   └── /tests         -> test files and settings
   └── app.py         -> Main app, routes
   └── schemas.py     -> json schemas to validate req, res
   └── config.py      -> app configuration
   └── gunicorn.py    -> configuration file to run on production
   └── similarity.py  -> ML utilities
```

## Development environment steps
1. Install docker and docker compose
3. Upload the compose using
    ```console
     $ docker-compose -f docker-compose-dev.yml up --build
      ```
4. Now you can verify if the service is running visiting this url: http://localhost:5001/docs
 
## Development process and branch strategy
Our principal branch is ***develop***
To create a new feature please follow the next steps:
1. Make sure you have the last changes.
    ```console
     $ git checkout develop
     $ git pull
    ```
2. Create a new branch where the feature will live. Please keep the issue number as prefix of the name
    ```console
     $ git checkout -b feature/GLOXXX-XXX-some-feature
    ```
3. Code the feature
4. Upload the feature branch to origin
    ```console
     $ git push
    ```
5. Create a new pull request and ask for reviewing to at least 2 partners

## Running tests and coverage
To run tests and coverage you must use the following commands:
* Run tests `make test`
* Run coverage `make coverage`
* Run coverage html and open report `make coverage-report`